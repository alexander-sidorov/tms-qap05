name: QA

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

env:
  PIPENV_VENV_IN_PROJECT: "1"

jobs:
  qa:
    strategy:
      matrix:
        os:
          - "macos-latest"
          - "ubuntu-latest"
          - "windows-latest"
        python-version:
          - "3.9"
          - "3.10"
    runs-on: ${{ matrix.os }}
    steps:
      - name: 'üß± The code is pulled from the repository.'
        uses: actions/checkout@v2
      - name: 'üêç Python is set up.'
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: 'x64'
      - name: '‚òÅÔ∏è The whole Python is cached.'
        id: cache-runtime
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: cache-runtime-${{ matrix.os }}-${{ env.pythonLocation }}-${{ hashFiles('Pipfile') }}
      - name: 'ü™õ Pipenv is installed.'
        if: ${{ !steps.cache-runtime.outputs.cache-hit }}
        run: pip install pipenv
      - name: 'üîã The dependencies are installed.'
        if: ${{ !steps.cache-runtime.outputs.cache-hit }}
        run: |
          pipenv lock
          make venv-deploy-all
      - name: 'üç∫ The code passes all QA checks'
        run: make qa
      - name: 'üì° SonarCloud has scanned the project.'
        if: ${{ startsWith(matrix.os, 'ubuntu' }}
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
